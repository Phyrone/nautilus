on:
  push:
    branches:
      - main
name: Pages
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true
jobs:
  docusaurus:
    name: Docusaurus
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          package_json_file: 'page/package.json'
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'
      - name: Install Dependencies
        run: pnpm install
      - name: Build
        working-directory: page
        run: pnpm build
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          path: 'page/build'
          if-no-files-found: 'error'
          name: 'docusaurus'

  dokka:
    name: Dokka
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        name: Setup JDK
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v4
      - name: Generate Dokka HTML
        run: ./gradlew dokkaHtmlMultiModule
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dokka
          path: 'build/dokka/htmlMultiModule'

#  cargo:
#    name: Cargo
##    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout sources
#        uses: actions/checkout@v4
#      - name: Setup Protoc
#        uses: arduino/setup-protoc@v3
#        with:
#          repo-token: ${{ secrets.GITHUB_TOKEN }}
#      - name: Setup Rust
#        uses: dtolnay/rust-toolchain@stable
#      - name: Cargo Cache
#        uses: Swatinem/rust-cache@v2
#      - name: Cargo Doc
#        run: cargo doc
#      - name: Upload Artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: cargo
#          path: 'target/doc'
#
  bundle:
    # Take docusaurus and all code documentation and bundle them together
    # Docusaurus -> /
    # Dokka -> /kotlin
    # Cargo -> /rust
    # Then upload the bundle as an artifact for deployment
    name: Bundle
    runs-on: ubuntu-latest
    needs:
      - docusaurus
      - dokka
#      - cargo
    steps:
      - name: Pull Docusaurus
        uses: actions/download-artifact@v5
        with:
          name: docusaurus
          path: 'bundle/'
      - name: Pull Dokka
        uses: actions/download-artifact@v5
        with:
          name: dokka
          path: 'bundle/kotlin'
#      - name: Pull Cargo
#        uses: actions/download-artifact@v4
#        with:
#          name: cargo
#          path: 'bundle/rust'
      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: 'bundle'
      - name: Delete Artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          failOnError: 'true'
          name: -|
            docusaurus
            dokka
#            cargo

  deploy:
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: bundle
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4


