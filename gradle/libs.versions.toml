[versions]

# Gradle Plugins
protobuf-plugin-version = "0.9.5"
jib-plugin-version = "3.4.5"
versions-plugin-version = "0.52.0"
shadow-plugin-version = "8.1.1"
ktlint-plugin-version = "12.2.0"

# Kotlin, and closely related
ktor = "3.1.2"
kotlin-version = "2.1.20"
dokka-version = "2.0.0"
coroutines-version = "1.10.2"
ksp-version = "2.1.20-1.0.32"

# Libraries
jgit-version = "7.2.0.202503040940-r"
jackson-version = "2.18.3"
slf4j-version = "2.0.17"
logback-version = "1.5.18"
guava-version = "33.4.6-jre"
bouncycastle-version = "1.80"
jib-version = "0.27.3"
kubernetes-client = "7.1.0"
koin-version = "4.0.4"
koin-annotations-version = "2.0.0"
mccoroutines-version = "2.21.0"
picocli-version = "4.7.6"
progressbar = "0.10.1"
jline = "3.29.0"

# Protobuf (except gradle plugin)
protobuf-version = "4.30.2"
grpc-version = "1.71.0"
grpc-kotlin-version = "1.4.1"

#flaxoos-extra-plugins-version = "1.2.10"

[libraries]

# Kotlin
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin-version" }
kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin-version" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin-version" }

# Kotlin Coroutines
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines-version" }
kotlinx-coroutines-jdk8 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "coroutines-version" }
kotlinx-coroutines-reactive = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactive", version.ref = "coroutines-version" }

# Ktor
ktor-serialization-jackson = { module = "io.ktor:ktor-serialization-jackson", version.ref = "ktor" }

# Ktor Server
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }

# Ktor Client
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-encoding = { module = "io.ktor:ktor-client-encoding", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-bom-remover = { module = "io.ktor:ktor-client-bom-remover", version.ref = "ktor" }


# Ktor Server Task Scheduling
#ktor-server-task-scheduling-core = { module = "io.github.flaxoos:ktor-server-task-scheduling-core-jvm", version.ref = "flaxoos-extra-plugins-version" }
#ktor-server-task-scheduling-redis = { module = "io.github.flaxoos:ktor-server-task-scheduling-redis-jvm", version.ref = "flaxoos-extra-plugins-version" }
#ktor-server-task-scheduling-mongodb = { module = "io.github.flaxoos:ktor-server-task-scheduling-mongodb-jvm", version.ref = "flaxoos-extra-plugins-version" }
#ktor-server-task-scheduling-jdbc = { module = "io.github.flaxoos:ktor-server-task-scheduling-jdbc-jvm", version.ref = "flaxoos-extra-plugins-version" }

# Jackson
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson-version" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson-version" }
jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jackson-version" }
jackson-dataformat-yaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "jackson-version" }
jackson-dataformat-toml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-toml", version.ref = "jackson-version" }
jackon-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson-version" }

# Koin
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin-version" }
koin-core-coroutines = { module = "io.insert-koin:koin-core-coroutines", version.ref = "koin-version" }
koin-sl4j = { module = "io.insert-koin:koin-logger-slf4j", version.ref = "koin-version" }

koin-annotations = { module = "io.insert-koin:koin-annotations", version.ref = "koin-annotations-version" }
koin-annotations-compiler = { module = "io.insert-koin:koin-ksp-compiler", version.ref = "koin-annotations-version" }


# Protobuf and gRPC
protobuf-java = { module = "com.google.protobuf:protobuf-java", version.ref = "protobuf-version" }
protobuf-kotlin = { module = "com.google.protobuf:protobuf-kotlin", version.ref = "protobuf-version" }
protobuf-java-util = { module = "com.google.protobuf:protobuf-java-util", version.ref = "protobuf-version" }


grpc-core = { module = "io.grpc:grpc-core", version.ref = "grpc-version" }
grpc-stub = { module = "io.grpc:grpc-stub", version.ref = "grpc-version" }
grpc-stub-kotlin = { module = "io.grpc:grpc-kotlin-stub", version.ref = "grpc-kotlin-version" }
grpc-protobuf = { module = "io.grpc:grpc-protobuf", version.ref = "grpc-version" }
grpc-netty = { module = "io.grpc:grpc-netty-shaded", version.ref = "grpc-version" }


# Guava
guava = { module = "com.google.guava:guava", version.ref = "guava-version" }

# Bouncy Castle
bouncycastle-bcprov = { module = "org.bouncycastle:bcprov-jdk18on", version.ref = "bouncycastle-version" }
bouncycastle-bcpkix = { module = "org.bouncycastle:bcpkix-jdk18on", version.ref = "bouncycastle-version" }

# Kubernetes Client
k8s-client = { module = "io.fabric8:kubernetes-client", version.ref = "kubernetes-client" }
k8s-crds-annotations = { module = "io.fabric8:generator-annotations", version.ref = "kubernetes-client" }
k8s-crds-generator = { module = "io.fabric8:crd-generator-apt", version.ref = "kubernetes-client" }

# JGit
jgit = { module = "org.eclipse.jgit:org.eclipse.jgit", version.ref = "jgit-version" }
jgit-archive = { module = "org.eclipse.jgit:org.eclipse.jgit.archive", version.ref = "jgit-version" }

# Jib
jib = { module = "com.google.cloud.tools:jib-core", version.ref = "jib-version" }

# Logging
slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j-version" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback-version" }

# Picocli
picocli = { module = "info.picocli:picocli", version.ref = "picocli-version" }
picocli-codegen = { module = "info.picocli:picocli-codegen", version.ref = "picocli-version" }

# Mcoroutines
mccoroutines-folia-api = { module = "com.github.shynixn.mccoroutine:mccoroutine-folia-api", version.ref = "mccoroutines-version" }
mccoroutines-folia-core = { module = "com.github.shynixn.mccoroutine:mccoroutine-folia-core", version.ref = "mccoroutines-version" }

mccoroutines-velocity-api = { module = "com.github.shynixn.mccoroutine:mccoroutine-velocity-api", version.ref = "mccoroutines-version" }
mccoroutines-velocity-core = { module = "com.github.shynixn.mccoroutine:mccoroutine-velocity-core", version.ref = "mccoroutines-version" }

mccoroutines-bungee-api = { module = "com.github.shynixn.mccoroutine:mccoroutine-bungeecord-api", version.ref = "mccoroutines-version" }
mccoroutines-bungee-core = { module = "com.github.shynixn.mccoroutine:mccoroutine-bungeecord-core", version.ref = "mccoroutines-version" }


# Progressbar
progressbar = { module = "me.tongfei:progressbar", version.ref = "progressbar" }

# JLine
jline = { module = "org.jline:jline", version.ref = "jline" }


[bundles]

grpc = [
    "protobuf-kotlin",
    "protobuf-java",
    "protobuf-java-util",
    "grpc-core",
    "grpc-stub",
    "grpc-stub-kotlin",
    "grpc-protobuf",
    "grpc-netty",
]

kotlin-stdlib = [
    "kotlin-stdlib",
    "kotlin-stdlib-jdk8",
    "kotlin-reflect",
]

kotlin-coroutines = [
    "kotlinx-coroutines-core",
    "kotlinx-coroutines-jdk8",
    "kotlinx-coroutines-reactive",
]

koin = [
    "koin-core",
    "koin-core-coroutines",
    "koin-sl4j",
    "koin-annotations"
]

jackson = [
    "jackson-core",
    "jackson-databind",
    "jackson-annotations",
    "jackson-dataformat-yaml",
    "jackson-dataformat-toml",
    "jackon-module-kotlin",
]
bouncycastle = [
    "bouncycastle-bcprov",
    "bouncycastle-bcpkix",
]

logging = [
    "slf4j",
    "logback-classic",
]

ktor-server = [
    "ktor-server-core",
    "ktor-server-netty",
]

ktor-client = [
    "ktor-serialization-jackson",
    "ktor-client-core",
    "ktor-client-okhttp",
    "ktor-content-negotiation",
    "ktor-client-encoding",
    "ktor-client-logging",
    "ktor-client-bom-remover"
]

mcroutines-folia = [
    "kotlinx-coroutines-core",
    "kotlinx-coroutines-jdk8",
    "mccoroutines-folia-api",
    "mccoroutines-folia-core",
]

mcroutines-velocity = [
    "kotlinx-coroutines-core",
    "kotlinx-coroutines-jdk8",
    "mccoroutines-velocity-api",
    "mccoroutines-velocity-core",
]

mcroutines-bungee = [
    "kotlinx-coroutines-core",
    "kotlinx-coroutines-jdk8",
    "mccoroutines-bungee-api",
    "mccoroutines-bungee-core",
]

[plugins]

versions = { id = "com.github.ben-manes.versions", version.ref = "versions-plugin-version" }
shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadow-plugin-version" }

kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin-version" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin-version" }
kotlin-ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint-plugin-version" }
kotlin-plugin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin-version" }
kotlin-plugin-noarg = { id = "org.jetbrains.kotlin.plugin.noarg", version.ref = "kotlin-version" }
jetbrains-dokka = { id = "org.jetbrains.dokka", version.ref = "dokka-version" }
google-jib = { id = "com.google.cloud.tools.jib", version.ref = "jib-plugin-version" }
google-protobuf = { id = "com.google.protobuf", version.ref = "protobuf-plugin-version" }
google-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp-version" }
fabric8-crds-generator = { id = "io.fabric8.java-generator", version.ref = "kubernetes-client" }
